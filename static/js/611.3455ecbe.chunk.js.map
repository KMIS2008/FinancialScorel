{"version":3,"file":"static/js/611.3455ecbe.chunk.js","mappings":"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","sources":["components/DataForm/DataForm.styled.js","../node_modules/nanoid/index.browser.js","components/DataForm/DataForm.js","Pages/Home/Home.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form= styled.form` \ndisplay: flex;\nflex-direction: column;\npadding: ${p=>p.theme.spacing(4)};\n`\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const Input =styled.input`\nmargin-bottom: ${p=>p.theme.spacing(2)};\nmargin-top: ${p=>p.theme.spacing(1)};\nwidth: 100%;\nheight: 44px;\npadding: 0 0 0 20px;\nborder-radius: 60px;\noutline: none;\nborder: 1px solid #1D1E2133;\n\n    &:hover {\n            border: 1px solid #0CAFFF;\n          }\n\n    &::placeholder {\n        color: #1D1E2166; \n  }\n`\n\nexport const Label=styled.label`\npadding-left: ${p=>p.theme.spacing(3)};\n`\n\nexport const Button =styled.button`\npadding: ${p=>p.theme.spacing(1)};\nbackground: ${p=>p.theme.colors.green};\nborder-radius: 50px;\nfont-family: Inter;\nfont-size: 24px;\nfont-weight: 600;\nline-height: 1,21;\n\ncursor: pointer;\n\n&:hover{\n    background: ${p=>p.theme.colors.yellow}; \n}\n`\n\nexport const ContainerFlex=styled.div`\n@media (min-width: 768px) {\n  display: flex;\ngap:5px;\n}\n\n`\n\nexport const ContainerColumn=styled.div`\n@media (min-width: 768px) {\ndisplay: flex;\nflex-direction: column;\ngap:5px;\n}\n`","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import {Form, Error, Input, Label, Button, ContainerFlex, ContainerColumn} from \"./DataForm.styled\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from \"react-redux\";\nimport { addData } from \"redux/operations\";\nimport { useNavigate } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string(),\n});\n\nexport const DataForm=()=>{\n    const navigate=useNavigate();\n    const dispatch=useDispatch();\n\n    const handleNavigate=()=>{\n        navigate('/financial-analisis')\n    }\n  \n  const { register, handleSubmit, formState: { errors },reset} = useForm({\n      resolver: yupResolver(SignupSchema),\n    });\n  \n    const onSubmit = async (data, e) => {\n      e.preventDefault();\n      try {\n        const _id=nanoid();\n        const newData={...data, _id}\n          await dispatch(addData(newData));\n          handleNavigate();\n          reset();\n      } catch (errors) {\n          alert(errors.message)\n      }\n  };\n\n  \n    return(\n     <Form onSubmit={handleSubmit(onSubmit)}>\n\n<Label htmlFor=\"nameCompany\">Назва компанії</Label>\n  <Input\n    id=\"nameCompany\"\n    name='nameCompany'\n    type='text'\n    placeholder=\"Name company\"\n    {...register('nameCompany')}\n  />\n   {errors.name && <Error>{errors.name.message}</Error>}\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"currentAssets\">Поточні активи</Label>\n      <Input\n       id=\"currentAssets\"\n       name='currentAssets'\n       type='text'\n       placeholder=\"Current Assets(balance 1195)\"\n       {...register('currentAssets')}\n     />\n       {errors.currentAssets && <Error>{errors.currentAssets.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"currentLiabilities\">Поточні зобов’язання</Label>\n       <Input\n       id=\"currentLiabilities\"\n       name='currentLiabilities'\n       type='text'\n       placeholder=\"Current Liabilities (balance 1695)\"\n       {...register('currentLiabilities')}\n    />\n      {errors.currentLiabilities && <Error>{errors.currentLiabilities.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"stocks\">Поточні активи</Label>\n      <Input\n       id=\"stocks\"\n       name='stocks'\n       type='text'\n       placeholder=\"Stocks(balance 1100)\"\n       {...register('stocks')}\n     />\n       {errors.stocks && <Error>{errors.stocks.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"money\">Грошові кошти</Label>\n       <Input\n       id=\"money\"\n       name='money'\n       type='text'\n       placeholder=\"Money (balance 1165)\"\n       {...register('money')}\n    />\n      {errors.CurrentLiabilities && <Error>{errors.CurrentLiabilities.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"equity\">Власний капітал</Label>\n      <Input\n       id=\"equity\"\n       name='equity'\n       type='text'\n       placeholder=\"Equity(balance 1495)\"\n       {...register('equity')}\n     />\n       {errors.equity && <Error>{errors.equity.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"totalAssets\">Загальні активи</Label>\n       <Input\n       id=\"totalAssets\"\n       name='totalAssets'\n       type='text'\n       placeholder=\"Total assets (balance 100)\"\n       {...register('totalAssets')}\n    />\n      {errors.totalAssets && <Error>{errors.totalAssets.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"liabilities\">Зобов’язання</Label>\n      <Input\n       id=\"liabilities\"\n       name='liabilities'\n       type='text'\n       placeholder=\"Liabilities(balance 1595+1695)\"\n       {...register('liabilities')}\n     />\n       {errors.liabilities && <Error>{errors.liabilities.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"longTermLiabilities\">Довгострокові зобов’язання</Label>\n       <Input\n       id=\"longTermLiabilities\"\n       name='longTermLiabilities'\n       type='text'\n       placeholder=\"Long-term Liabilities (balance 1595)\"\n       {...register('longTermLiabilities')}\n    />\n      {errors.longTermLiabilities && <Error>{errors.longTermLiabilities.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"netProfit\">Чистий прибуток</Label>\n      <Input\n       id=\"netProfit\"\n       name='netProfit'\n       type='text'\n       placeholder=\"Net profit(fin 2350)\"\n       {...register('netProfit')}\n     />\n       {errors.netProfit && <Error>{errors.netProfit.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"revenue\">Чистий дохід від реалізації</Label>\n       <Input\n       id=\"revenue\"\n       name='revenue'\n       type='text'\n       placeholder=\"Revenue (fin 2000)\"\n       {...register('revenue')}\n    />\n      {errors.revenue && <Error>{errors.revenue.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"cost\">Собівартість реалізованих товарів</Label>\n      <Input\n       id=\"cost\"\n       name='cost'\n       type='text'\n       placeholder=\"Сost(fin 2050)\"\n       {...register('cost')}\n     />\n       {errors.cost && <Error>{errors.cost.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"stocksFirst\">Запаси на початку періода</Label>\n       <Input\n       id=\"stocksFirst\"\n       name='stocksFirst'\n       type='text'\n       placeholder=\"Stocks First (balance 1100)\"\n       {...register('stocksFirst')}\n    />\n      {errors.stocksFirst && <Error>{errors.stocksFirst.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"stocksFinish\">Запаси на кінець періода</Label>\n      <Input\n       id=\"stocksFinish\"\n       name='stocksFinish'\n       type='text'\n       placeholder=\"stocksFinish(balance 1100)\"\n       {...register('stocksFinish')}\n     />\n       {errors.stocksFinish && <Error>{errors.stocksFinish.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"accountsReceivableFist\">Дебіторська заборгованість на початок періоду</Label>\n       <Input\n       id=\"accountsReceivableFist\"\n       name='accountsReceivableFist'\n       type='text'\n       placeholder=\"Accounts receivable first(balance 1125)\"\n       {...register('accountsReceivableFist')}\n    />\n      {errors.accountsReceivableFist && <Error>{errors.accountsReceivableFist.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"accountsReceivableFinish\">Дебіторська заборгованість на кінець періода</Label>\n      <Input\n       id=\"accountsReceivableFinish\"\n       name='accountsReceivableFinish'\n       type='text'\n       placeholder=\"Accounts receivable finish(balance 1125)\"\n       {...register('accountsReceivableFinish')}\n     />\n       {errors.accountsReceivableFinish && <Error>{errors.accountsReceivableFinish.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"longTermFinancialInvestments\">Довгострокові фінансові інвестиції</Label>\n       <Input\n       id=\"longTermFinancialInvestments\"\n       name='longTermFinancialInvestments'\n       type='text'\n       placeholder=\"long-term financial investments (balance 1030+1035)\"\n       {...register('longTermFinancialInvestments')}\n    />\n      {errors.longTermFinancialInvestments && <Error>{errors.longTermFinancialInvestments.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"currentFinancialInvestments\">Поточні фінансові інвестиції</Label>\n      <Input\n       id=\"currentFinancialInvestments\"\n       name='currentFinancialInvestments'\n       type='text'\n       placeholder=\"Current financial investments(balance 1160)\"\n       {...register('currentFinancialInvestments')}\n     />\n       {errors.currentFinancialInvestments && <Error>{errors.currentFinancialInvestments.message}</Error>}     \n    </ContainerColumn>\n\n   <ContainerColumn>\n       <Label htmlFor=\"operatingProfit\">Операційний прибуток</Label>\n       <Input\n       id=\"operatingProfit\"\n       name='operatingProfit'\n       type='text'\n       placeholder=\"Operating Profit (fin 2190+2195)\"\n       {...register('operatingProfit')}\n    />\n      {errors.operatingProfit && <Error>{errors.operatingProfit.message}</Error>}\n    </ContainerColumn>\n</ContainerFlex>\n\n<ContainerFlex>\n    <ContainerColumn>\n      <Label htmlFor=\"interestExpenses\">Витрати на відсотки</Label>\n      <Input\n       id=\"interestExpenses\"\n       name='interestExpenses'\n       type='text'\n       placeholder=\"Interest expenses(money 3360)\"\n       {...register('interestExpenses')}\n     />\n       {errors.interestExpenses && <Error>{errors.interestExpenses.message}</Error>}     \n    </ContainerColumn>\n</ContainerFlex>\n\n<Button type=\"submit\" >\n    Send Info\n</Button>\n    </Form>\n)\n}","import { DataForm } from \"components/DataForm/DataForm\"\n\nexport default function Home(){\n\nreturn (\n<>\n   <DataForm/>\n</>\n \n)\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Error","_templateObject2","Input","_templateObject3","Label","_templateObject4","Button","_templateObject5","colors","green","yellow","ContainerFlex","_templateObject6","ContainerColumn","_templateObject7","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","SignupSchema","Yup","shape","name","DataForm","navigate","useNavigate","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","e","_id","newData","_context","prev","next","preventDefault","_objectSpread","addData","t0","alert","message","stop","_x","_x2","apply","_jsxs","children","_jsx","htmlFor","type","placeholder","currentAssets","currentLiabilities","stocks","CurrentLiabilities","equity","totalAssets","liabilities","longTermLiabilities","netProfit","revenue","cost","stocksFirst","stocksFinish","accountsReceivableFist","accountsReceivableFinish","longTermFinancialInvestments","currentFinancialInvestments","operatingProfit","interestExpenses","Home","_Fragment"],"sourceRoot":""}