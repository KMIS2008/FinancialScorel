{"version":3,"file":"static/js/524.226d109a.chunk.js","mappings":"sPAEaA,EAAMC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAGnB,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAGnBC,EAAQN,EAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gKAWnBM,EAAOR,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qRACf,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAiBzBK,EAAMV,EAAAA,GAAAA,MAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mDACd,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACtB,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAGxBO,EAAQZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,yMACvB,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAClB,SAAAF,GAAC,OAAEA,EAAEC,MAAMU,OAAOC,KAAK,IAUnB,SAAAZ,GAAC,OAAEA,EAAEC,MAAMU,OAAOE,MAAM,I,8EC5CpCC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,OAGKG,EAAS,WAClB,IAAMC,GAASC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,MA0CjBC,GAA+DC,EAAAA,EAAAA,IAAQ,CACnEC,UAAUC,EAAAA,EAAAA,GAAYZ,KADlBa,EAAQJ,EAARI,SAAUC,EAAYL,EAAZK,aAA2BC,EAAMN,EAAnBO,UAAaD,OAASE,EAAKR,EAALQ,MAI9CC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,EAAMC,GAAC,IAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIA,OAH7BL,EAAEM,iBAAiBH,EAAAC,KAAA,EAEXH,GAAIM,EAAAA,EAAAA,MACJL,GAAOM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKT,GAAI,IAAEE,IAAAA,IAAGE,EAAAE,KAAA,EACnBtB,GAAS0B,EAAAA,EAAAA,GAAQP,IAAU,KAAD,EAhDlCrB,EAAS,uBAkDPY,IACFU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEEQ,MAAMR,EAAAO,GAAOE,SAAQ,yBAAAT,EAAAU,OAAA,GAAAf,EAAA,mBAE5B,gBAZegB,EAAAC,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAoBd,OACCC,EAAAA,EAAAA,MAAC5D,EAAI,CAACoC,SAAUJ,EAAaI,GAAUyB,SAAA,EAE5CC,EAAAA,EAAAA,KAACnD,EAAK,CAACoD,QAAQ,cAAaF,SAAC,kBAC3BC,EAAAA,EAAAA,KAACrD,GAAKyC,EAAAA,EAAAA,GAAA,CACJc,GAAG,cACH3C,KAAK,cACL4C,KAAK,OAGLC,YAAY,gBACRnC,EAAS,iBAEhBE,EAAOZ,OAAQyC,EAAAA,EAAAA,KAACvD,EAAK,CAAAsD,SAAE5B,EAAOZ,KAAKiC,WAEpCQ,EAAAA,EAAAA,KAACjD,EAAM,CAACoD,KAAK,SAAQJ,SAAE,gBAKvB,ECpGe,SAASM,IAExB,OACAL,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAP,UACGC,EAAAA,EAAAA,KAACxC,EAAQ,KAIZ,C","sources":["components/DataForm/DataForm.styled.js","components/DataForm/DataForm.js","Pages/Home/Home.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form= styled.form` \ndisplay: flex;\nflex-direction: column;\npadding: ${p=>p.theme.spacing(4)};\n`\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const Input =styled.input`\nmargin-bottom: ${p=>p.theme.spacing(2)};\nwidth: 100%;\nheight: 44px;\npadding: 0 0 0 20px;\nborder-radius: 60px;\noutline: none;\nborder: 1px solid #1D1E2133;\n\n    &:hover {\n            border: 1px solid #0CAFFF;\n          }\n\n    &::placeholder {\n        color: #1D1E2166; \n  }\n`\n\nexport const Label=styled.label`\nmargin-bottom: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(3)};\n`\n\nexport const Button =styled.button`\npadding: ${p=>p.theme.spacing(1)};\nbackground: ${p=>p.theme.colors.green};\nborder-radius: 50px;\nfont-family: Inter;\nfont-size: 24px;\nfont-weight: 600;\nline-height: 1,21;\n\ncursor: pointer;\n\n&:hover{\n    background: ${p=>p.theme.colors.yellow}; \n}\n`","import {Form, Error, Input, Label, Button} from \"./DataForm.styled\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from \"react-redux\";\nimport { addData } from \"redux/operations\";\n// import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string(),\n});\n\nexport const DataForm=()=>{\n    const navigate=useNavigate();\n    const dispatch=useDispatch();\n\n    const handleNavigate=()=>{\n        navigate('/liquidity-analysis')\n    }\n\n    // const customStyles = {\n    //   placeholder: (provided) => ({\n    //     ...provided,\n    //     color: '#1D1E2166', \n    //   }),\n    //   control: (provided, state) => ({\n    //     ...provided,\n    //     height: '44px',\n    //     padding: '0 0 0 20px',\n    //     marginBottom: '10px',\n    //     borderRadius: '60px',\n    //     border: state.isFocused ? '1px solid #59B17A' : '1px solid #1D1E2133',\n    //     '&:hover': {\n    //       border: '1px solid #59B17A',\n    //     },\n    //   }),\n     \n    //   option: (provided, state) => ({\n    //     ...provided,\n    //     border: 'none',\n    //     padding: '0 20px',\n  \n    //     fontFamily: 'Inter',\n    //     fontSize: '12px',\n    //     fontWeight: '400',\n    //     lineHeight: '1.5',\n    //     letterSpacing: '-0.03em',\n    //     color: state.isSelected ? '#fff' : '#1D1E21',\n    //     backgroundColor: state.isSelected ? '#59B17A' : '#fff',\n    //   }),\n  \n    //   indicatorSeparator: (provided) => ({\n    //       display: 'none',\n    //     }),\n    // };\n  \n  const { register, handleSubmit, formState: { errors },reset} = useForm({\n      resolver: yupResolver(SignupSchema),\n    });\n  \n    const onSubmit = async (data, e) => {\n      e.preventDefault();\n      try {\n        const _id=nanoid();\n        const newData={...data, _id}\n          await dispatch(addData(newData));\n          handleNavigate();\n          reset();\n        //   setSearchValue(\"\"); \n      } catch (errors) {\n          alert(errors.message)\n      }\n  };\n    //   const [searchValue, setSearchValue] = useState(\"\");\n\n    //   const handleInputChange = (e) => {\n    //     setSearchValue(e.target.value);\n    // };\n\n    \n    return(\n     <Form onSubmit={handleSubmit(onSubmit)}>\n\n<Label htmlFor=\"nameCompany\">Name company</Label>\n  <Input\n    id=\"nameCompany\"\n    name='nameCompany'\n    type='text'\n    // value={searchValue}\n    // onChange={handleInputChange}\n    placeholder=\"Name company\"\n    {...register('nameCompany')}\n  />\n{errors.name && <Error>{errors.name.message}</Error>}\n\n<Button type=\"submit\" >\n    Send Info\n</Button>\n    </Form>\n)\n}","import { DataForm } from \"components/DataForm/DataForm\"\n\nexport default function Home(){\n\nreturn (\n<>\n   <DataForm/>\n</>\n \n)\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Error","_templateObject2","Input","_templateObject3","Label","_templateObject4","Button","_templateObject5","colors","green","yellow","SignupSchema","Yup","shape","name","DataForm","navigate","useNavigate","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","e","_id","newData","_context","prev","next","preventDefault","nanoid","_objectSpread","addData","t0","alert","message","stop","_x","_x2","apply","arguments","_jsxs","children","_jsx","htmlFor","id","type","placeholder","Home","_Fragment"],"sourceRoot":""}